{"version":3,"sources":["DB/npc.csv","DB/db.js","Containers/Folks/FolkCard.jsx","Containers/Folks/FolksList.jsx","Containers/Folks/FolksFilters.jsx","Containers/Folks/FolkModal.jsx","Containers/Folks/index.jsx","Containers/AppMenu/index.jsx","Containers/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","db","Dexie","getAllWords","text","wordSet","words","toLowerCase","reduce","prev","current","Object","keys","version","stores","folks","hook","primKey","obj","trans","name","searchableName","mods","hasOwnProperty","FolkCard","folk","this","props","react_default","a","createElement","GridColumn","computer","Card","index","folkIndex","className","fluid","raised","onClick","onCardClick","Content","Header","content","concat","cr","Meta","alignment","race","class","Description","hp","ac","cmd","baseAtk","melee","length","fort","ref","will","Component","NPCList","folksArray","filters","_this","npc","Grid","centered","padded","map","folkData","Folks_FolkCard","key","Loader","active","indeterminate","inline","size","PureComponent","FolksFilters","Input","placeholder","onChange","onFilter","FolkModal","_this$props","show","onModalClose","Modal","open","onClose","dimmer","image","xp","ageCategory","Race","init","senses","aura","Divider","section","horizontal","acMods","hd","saves","speed","space","reach","spellLikeAbilities","abilityScores","cmb","feats","Folks","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","currentPage","folksOnPage","folksAmount","selectedFolk","count","then","amount","setState","console","info","Papa","parse","folksFile","download","header","transformHeader","camelCase","dynamicTyping","complete","result","bulkAdd","data","orderBy","limit","toArray","res","onPageChange","bind","assertThisInitialized","event","objectSpread","defineProperty","value","activePage","prevProps","prevState","where","startsWithIgnoreCase","reverse","offset","sortBy","_this$state2","log","Folks_FolksFilters","debounce","FolksList","pageNumber","Pagination","defaultActivePage","firstItem","lastItem","pointing","secondary","totalPages","Math","floor","Folks_FolkModal","AppMenu","Menu","Item","fitted","Image","wrapped","src","link","App","Containers_AppMenu","Containers_Folks","Boolean","window","location","hostname","match","ReactDOM","render","src_Containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b207eac7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/npc.e8648bbf.csv\";","import Dexie from \"dexie\"\nimport words from 'lodash/words';\n\nconst db = new Dexie('pathfinder');\ndb.version(1).stores({ folks: '++,name,*searchableName,class,cr,race,xp,fort,ref,will' });\n\ndb.folks.hook(\"creating\", function (primKey, obj, trans) {\n  if (typeof obj.name == 'string') obj.searchableName = getAllWords(obj.name);\n});\n\ndb.folks.hook(\"updating\", function (mods, primKey, obj, trans) {\n  if (mods.hasOwnProperty(\"name\")) {\n      // \"name\" property is being updated\n      if (typeof mods.name == 'string')\n          // \"name\" property was updated to another valid value. Re-index searchableName:\n          return { searchableName: getAllWords(mods.name) };\n      else\n          // \"name\" property was deleted (typeof mods.name === 'undefined') or changed to an unknown type. Remove indexes:\n          return { searchableName: [] };\n  }\n\n});\n\nfunction getAllWords(text) {\n  /// <param name=\"text\" type=\"String\"></param>\n  var allWordsIncludingDups = words(text.toLowerCase());\n  var wordSet = allWordsIncludingDups.reduce(function (prev, current) {\n      prev[current] = true;\n      return prev;\n  }, {});\n  return Object.keys(wordSet);\n}\n\nexport default db;","import React, { Component } from 'react';\nimport { Card, GridColumn } from 'semantic-ui-react';\n\nclass FolkCard extends Component {\n  render() {\n    let { folk } = this.props\n    return (\n      <GridColumn computer={5} >\n        <Card\n          index={this.props.folkIndex}\n          className=\"folk-card\"\n          fluid\n          raised\n          onClick={this.props.onCardClick}\n        >\n          <Card.Content>\n            <Card.Header content={`${folk.name} (CR ${folk.cr})`} />\n            <Card.Meta content={`${folk.alignment} ${folk.race} ${folk.class ? `(${folk.class})` : ''}`} />\n            <Card.Description>\n              <p>{`hp ${folk.hp}; AC ${folk.ac}; CMD ${folk.cmd}`}</p>\n              <p>{`Base Atk ${folk.baseAtk}; Melee ${folk.melee.length > 120 ? 'see details' : folk.melee}`}</p>\n              <p>{`Fort ${folk.fort}, Ref ${folk.ref}, Will ${folk.will}`}</p>\n            </Card.Description>\n          </Card.Content>\n        </Card>\n      </GridColumn>\n    );\n  }\n}\n\nexport default FolkCard;","import React, { PureComponent } from 'react';\nimport FolkCard from './FolkCard';\nimport { Grid, Loader } from 'semantic-ui-react';\n\nclass NPCList extends PureComponent {\n\n  filterFolks(folksArray, filters) {\n    // return folksArray.filter(folk => {\n    //   if (condition) {\n\n    //   }\n    //   return folk.Name.toLowerCase().includes(data.value.toLowerCase())\n    // })\n  }\n\n  render() {\n    let { npc } = this.props\n    return (\n      npc.length > 0 ? <Grid className=\"folk-list\" centered padded>\n        {\n          npc.map((folkData, index) => (\n            <FolkCard\n              key={index}\n              folkIndex={index}\n              folk={folkData}\n              onCardClick={this.props.onCardClick}\n            />\n          ))\n        }\n      </Grid > : <Loader active indeterminate inline size='big' />\n    );\n  }\n}\n\nexport default NPCList;","import React, { Component } from 'react';\nimport { Input } from 'semantic-ui-react'\n\nclass FolksFilters extends Component {\n  render() {\n    return (\n      <div className=\"folks-filters\">\n        <Input name=\"name\" placeholder=\"Name\" onChange={this.props.onFilter} />\n        <Input name=\"class\" placeholder=\"Class\" onChange={this.props.onFilter} />\n        <Input name=\"race\" placeholder=\"Race\" onChange={this.props.onFilter} />\n        <Input name=\"cr\" placeholder=\"CR\" onChange={this.props.onFilter} />\n      </div>\n    );\n  }\n}\n\nexport default FolksFilters;","import React, { Component } from 'react';\nimport { Header, Modal, Divider } from 'semantic-ui-react';\n\nclass FolkModal extends Component {\n  render() {\n    let { folkData, show, onModalClose } = this.props\n    return (\n      folkData &&\n      <Modal open={show} onClose={onModalClose} dimmer=\"inverted\" size=\"small\">\n        <Modal.Header>\n          {`${folkData.name} CR ${folkData.cr}`}\n        </Modal.Header>\n        <Modal.Content image>\n          <Modal.Description className=\"folk-modal\">\n            <Header>{`XP ${folkData.xp}`}</Header>\n            <p>{`${folkData.alignment} ${folkData.ageCategory} ${folkData.Race}`}</p>\n            <p>{`Init: ${folkData.init}; Senses: ${folkData.senses}`}</p>\n            <p>{`Aura: ${folkData.aura}`}</p>\n            <Divider content=\"Defense\" section horizontal />\n            <p>{`AC ${folkData.ac}; ${folkData.acMods}`}</p>\n            <p>{`hp ${folkData.hp} ${folkData.hd}`}</p>\n            <p>{`${folkData.saves}`}</p>\n            <Divider content=\"Offense\" section horizontal />\n            <p>{`Speed ${folkData.speed}`}</p>\n            <p>{`Melee ${folkData.melee}`}</p>\n            <p>{`Space ${folkData.space}; Reach ${folkData.reach}`}</p>\n            <p>{`Spell-Like Abilities ${folkData.spellLikeAbilities}`}</p>\n            <Divider content=\"Statistics\" section horizontal />\n            <p>{`${folkData.abilityScores}`}</p>\n            <p>{`Base Atk ${folkData.baseAtk}; CMB ${folkData.cmb}; CMD ${folkData.cmd}`}</p>\n            <p>{`Feats: ${folkData.feats}`}</p>\n          </Modal.Description>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n}\n\nexport default FolkModal;","import React, { PureComponent } from 'react';\nimport debounce from 'lodash/debounce';\nimport camelCase from 'lodash/camelCase';\nimport Papa from 'papaparse';\n\nimport db from '../../DB/db';\nimport folksFile from '../../DB/npc.csv';\n\nimport { Pagination } from 'semantic-ui-react'\nimport FolksList from './FolksList';\nimport FolksFilters from './FolksFilters';\nimport FolkModal from './FolkModal';\n\nclass Folks extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentPage: 0,\n      folksOnPage: 15,\n      folksAmount: 0,\n      folksArray: [],\n      selectedFolk: null,\n      filters: {\n        name: \"\",\n        class: \"\",\n        race: \"\",\n        cr: \"\",\n      }\n    }\n\n    db.folks.count().then(amount => {\n      this.setState({ folksAmount: amount })\n      amount ?\n        console.info('db already imported') :\n        Papa.parse(folksFile, {\n          download: true,\n          header: true,\n          transformHeader: (header => (camelCase(header))),\n          dynamicTyping: true,\n          complete: (result) => {\n            db.folks.bulkAdd(result.data)\n          },\n        })\n    })\n\n    db.folks.orderBy(\"cr\").limit(this.state.folksOnPage).toArray(res => {\n      this.setState({ folksArray: res })\n    })\n\n    this.onPageChange = this.onPageChange.bind(this)\n    this.onModalClose = this.onModalClose.bind(this)\n    this.onCardClick = this.onCardClick.bind(this)\n    this.onFilter = this.onFilter.bind(this)\n  }\n\n\n  onFilter(event, data) {\n    this.setState((state) => ({\n      filters: {\n        ...state.filters,\n        [data.name]: data.value.toLowerCase()\n      }\n    }))\n  }\n\n  onPageChange(event, data) {\n    this.setState({ currentPage: data.activePage - 1 })\n  }\n\n  onCardClick(event, data) {\n    this.setState((state) => ({\n      selectedFolk: state.folksArray[state.currentPage * state.folksOnPage + data.index]\n    }))\n  }\n\n  onModalClose() {\n    this.setState({\n      selectedFolk: null\n    })\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    let { currentPage, folksOnPage, filters } = this.state\n    let result\n    if (\n      prevState.currentPage !== currentPage ||\n      prevState.filters.name !== filters.name\n    ) {\n      result =\n        await db.folks\n          .where(\"searchableName\")\n          .startsWithIgnoreCase(filters.name)\n          .reverse()\n          .offset(currentPage * folksOnPage)\n          .limit(folksOnPage)\n          .sortBy(\"cr\")\n      this.setState({ folksArray: result })\n      // db.folks\n      //   .filter(folk => (folk.name.includes(filters.name)))\n      //   .offset(currentPage * folksOnPage)\n      //   .limit(folksOnPage)\n      //   .toArray(res => {\n      //     this.setState({ folksArray: res })\n      //   })\n    }\n  }\n\n  render() {\n    let { folksArray, currentPage, selectedFolk, folksOnPage, filters, folksAmount } = this.state\n    console.log(\"rndr\");\n    return (\n      <div className=\"folk-section\">\n        <FolksFilters onFilter={debounce(this.onFilter, 500)} />\n        <FolksList\n          npc={folksArray}\n          filters={filters}\n          pageNumber={currentPage}\n          folksOnPage={folksOnPage}\n          onCardClick={this.onCardClick} />\n        <Pagination\n          defaultActivePage={currentPage + 1}\n          firstItem={null}\n          lastItem={null}\n          pointing\n          secondary\n          totalPages={Math.floor(folksAmount / folksOnPage) - 1}\n          onPageChange={this.onPageChange}\n        />\n        <FolkModal\n          show={!!selectedFolk}\n          folkData={selectedFolk}\n          onModalClose={this.onModalClose}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Folks;","import React, { Component } from 'react';\nimport { Menu, Image } from 'semantic-ui-react';\n\nclass AppMenu extends Component {\n  render() {\n    return (\n      <Menu size=\"massive\" secondary>\n        <Menu.Item fitted='vertically' >\n          <Image\n            size=\"small\"\n            wrapped\n            src=\"https://www.firstcomicsnews.com/wp-content/uploads/2016/09/Pathfinder-Logo-600x257.png\"\n          />\n        </Menu.Item>\n        <Menu.Item link active={true} >Folks</Menu.Item>\n        <Menu.Item link>Bestiary</Menu.Item>\n        <Menu.Item link>Spells</Menu.Item>\n        <Menu.Item link>Feats</Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nexport default AppMenu;","import React, { Component } from 'react';\nimport './App.css';\n\nimport Folks from './Folks';\nimport AppMenu from './AppMenu';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <AppMenu />\n        <Folks />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}