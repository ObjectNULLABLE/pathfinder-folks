{"version":3,"sources":["Data/npc.csv","Containers/Folks/FolkCard.jsx","Containers/Folks/FolksList.jsx","Containers/Folks/FolksFilters.jsx","Containers/Folks/FolkModal.jsx","Containers/Folks/index.jsx","Containers/Menu/index.jsx","Containers/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FolkCard","folk","this","props","react_default","a","createElement","GridColumn","Card","index","folkIndex","className","fluid","raised","onClick","onCardClick","Content","Header","content","concat","Name","CR","Meta","Alignment","Race","Class","Description","HP","AC","CMD","BaseAtk","Melee","length","Fort","Ref","Will","Component","NPCList","_this","_this$props","npc","chunkNumber","Grid","columns","centered","map","folkData","Folks_FolkCard","key","Loader","FolksFilters","Input","placeholder","type","Button","FolkModal","show","onModalClose","Modal","open","onClose","dimmer","size","image","XP","AgeCategory","Init","Senses","Aura","Divider","section","horizontal","AC_Mods","HD","Saves","Speed","Space","Reach","SpellLikeAbilities","AbilityScores","CMB","Feats","Folks","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","selectedPage","NPC","selectedFolk","cardsOnPage","csv","then","data","chunkedData","chunk","setState","onPageChange","bind","assertThisInitialized","event","activePage","_this$state","Folks_FolksFilters","FolksList","Pagination","defaultActivePage","firstItem","lastItem","pointing","secondary","totalPages","Folks_FolkModal","Menu","src","alt","App","Containers_Menu","Containers_Folks","Boolean","window","location","hostname","match","ReactDOM","render","src_Containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1e70f3aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/npc.e8648bbf.csv\";","import React, { Component } from 'react';\nimport { Card, GridColumn } from 'semantic-ui-react';\n\nclass FolkCard extends Component {\n  render() {\n    let { folk } = this.props\n    return (\n      <GridColumn>\n        <Card\n          index={this.props.folkIndex}\n          className=\"folk-card\"\n          fluid\n          raised\n          onClick={this.props.onCardClick}\n        >\n          <Card.Content>\n            <Card.Header content={`${folk.Name} (CR ${folk.CR})`} />\n            <Card.Meta content={`${folk.Alignment} ${folk.Race} ${folk.Class ? `(${folk.Class})` : ''}`} />\n            <Card.Description>\n              <p>{`hp ${folk.HP}; AC ${folk.AC}; CMD ${folk.CMD}`}</p>\n              <p>{`Base Atk ${folk.BaseAtk}; Melee ${folk.Melee.length > 120 ? 'see details' : folk.Melee}`}</p>\n              <p>{`Fort ${folk.Fort}, Ref ${folk.Ref}, Will ${folk.Will}`}</p>\n            </Card.Description>\n          </Card.Content>\n        </Card>\n      </GridColumn>\n    );\n  }\n}\n\nexport default FolkCard;","import React, { Component } from 'react';\nimport FolkCard from './FolkCard';\nimport { Grid, Loader } from 'semantic-ui-react';\n\nclass NPCList extends Component {\n  render() {\n    let { npc, chunkNumber } = this.props\n    return (\n      npc.length > 0 ? <Grid columns={4} centered>\n        {\n          npc[chunkNumber].map((folkData, index) => (\n            <FolkCard key={index} folkIndex={index} folk={folkData} onCardClick={this.props.onCardClick} />\n          ))\n        }\n      </Grid > : <Loader />\n    );\n  }\n}\n\nexport default NPCList;","import React, { Component } from 'react';\nimport { Button, Input } from 'semantic-ui-react'\n\nclass FolksFilters extends Component {\n  render() {\n    return (\n      <div className=\"folks-filters\">\n        <Input placeholder=\"Name\" type=\"text\" />\n        <Input placeholder=\"Class\" type=\"text\" />\n        <Input placeholder=\"Race\" type=\"text\" />\n        <Input placeholder=\"CR\" type=\"text\" />\n        <Button>Apply</Button>\n      </div>\n    );\n  }\n}\n\nexport default FolksFilters;","import React, { Component } from 'react';\nimport { Header, Modal, Divider } from 'semantic-ui-react';\n\nclass FolkModal extends Component {\n  render() {\n    let { folkData, show, onModalClose } = this.props\n    return (\n      folkData &&\n      <Modal open={show} onClose={onModalClose} dimmer=\"inverted\" size=\"small\">\n        <Modal.Header>\n          {`${folkData.Name} CR ${folkData.CR}`}\n        </Modal.Header>\n        <Modal.Content image>\n          <Modal.Description className=\"folk-modal\">\n            <Header>{`XP ${folkData.XP}`}</Header>\n            <p>{`${folkData.Alignment} ${folkData.AgeCategory} ${folkData.Race}`}</p>\n            <p>{`Init: ${folkData.Init}; Senses: ${folkData.Senses}`}</p>\n            <p>{`Aura: ${folkData.Aura}`}</p>\n            <Divider content=\"Defense\" section horizontal />\n            <p>{`AC ${folkData.AC}; ${folkData.AC_Mods}`}</p>\n            <p>{`hp ${folkData.HP} ${folkData.HD}`}</p>\n            <p>{`${folkData.Saves}`}</p>\n            <Divider content=\"Offense\" section horizontal />\n            <p>{`Speed ${folkData.Speed}`}</p>\n            <p>{`Melee ${folkData.Melee}`}</p>\n            <p>{`Space ${folkData.Space}; Reach ${folkData.Reach}`}</p>\n            <p>{`Spell-Like Abilities ${folkData.SpellLikeAbilities}`}</p>\n            <Divider content=\"Statistics\" section horizontal />\n            <p>{`${folkData.AbilityScores}`}</p>\n            <p>{`Base Atk ${folkData.BaseAtk}; CMB ${folkData.CMB}; CMD ${folkData.CMD}`}</p>\n            <p>{`Feats: ${folkData.Feats}`}</p>\n          </Modal.Description>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n}\n\nexport default FolkModal;","import React, { Component } from 'react';\nimport { csv } from 'd3';\nimport chunk from 'lodash/chunk'\n\nimport NPC from '../../Data/npc.csv'\n\nimport { Pagination } from 'semantic-ui-react'\nimport FolksList from './FolksList';\nimport FolksFilters from './FolksFilters';\nimport FolkModal from './FolkModal';\n\nclass Folks extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedPage: 1,\n      NPC: [],\n      selectedFolk: null,\n      cardsOnPage: 15\n    }\n    csv(NPC).then(data => {\n      let chunkedData = chunk(data, this.state.cardsOnPage)\n      this.setState({ NPC: chunkedData })\n    })\n\n    this.onPageChange = this.onPageChange.bind(this)\n    this.onModalClose = this.onModalClose.bind(this)\n    this.onCardClick = this.onCardClick.bind(this)\n  }\n\n  onPageChange(event, data) {\n    this.setState({ selectedPage: data.activePage })\n  }\n\n  onCardClick(event, data) {\n    this.setState((state) => ({ selectedFolk: state.NPC[state.selectedPage - 1][data.index] }))\n  }\n\n  onModalClose() {\n    this.setState({\n      selectedFolk: null\n    })\n  }\n\n  render() {\n    let { NPC, selectedPage, selectedFolk } = this.state\n    return (\n      <div className=\"folk-section\">\n        <FolksFilters />\n        <FolksList npc={NPC} chunkNumber={selectedPage - 1} onCardClick={this.onCardClick} />\n        <Pagination\n          defaultActivePage={selectedPage}\n          firstItem={null}\n          lastItem={null}\n          pointing\n          secondary\n          totalPages={NPC.length - 1}\n          onPageChange={this.onPageChange}\n        />\n        <FolkModal show={!!selectedFolk} folkData={selectedFolk} onModalClose={this.onModalClose} />\n      </div>\n    );\n  }\n}\n\nexport default Folks;","import React, { Component } from 'react';\n\nclass Menu extends Component {\n  render() {\n    return (\n      <div className='menu'>\n        <img src=\"https://www.firstcomicsnews.com/wp-content/uploads/2016/09/Pathfinder-Logo-600x257.png\" alt=\"pathfinder-logo\" />\n        {/* <a href=\"#\">NPC</a> */}\n      </div>\n    );\n  }\n}\n\nexport default Menu;","import React, { Component } from 'react';\nimport './App.css';\n\nimport Folks from './Folks';\nimport Menu from './Menu';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Menu />\n        <Folks />\n        <div></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}